# Generated by Django 4.2.4 on 2023-12-06 00:09

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Announcement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("sent", models.BooleanField(default=False)),
                (
                    "type",
                    models.PositiveIntegerField(
                        choices=[(2, "REMINDER"), (3, "UPCOMING_MATCH"), (4, "MATCH_PROPOSAL")]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(null=True)),
                ("image", models.TextField(default="/static/images/no_picture_available.png")),
            ],
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("description", models.TextField()),
                ("year_published", models.IntegerField(blank=True, null=True)),
                ("image", models.TextField(default="/static/images/no_picture_available.png")),
                ("rules", models.TextField(blank=True, null=True)),
                ("min_players", models.PositiveIntegerField()),
                ("max_players", models.PositiveIntegerField()),
                ("suggested_age", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("expected_playtime", models.PositiveIntegerField(blank=True, null=True)),
                ("min_playtime", models.PositiveIntegerField(blank=True, null=True)),
                ("max_playtime", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "complexity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("BGG_id", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Lobby",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "match_status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Lobbied"), (2, "In-Progress"), (3, "Finished")], default=1
                    ),
                ),
                ("name", models.TextField()),
                (
                    "game_mod_status",
                    models.PositiveSmallIntegerField(choices=[(1, "Default Game"), (2, "Modified Game")], default=1),
                ),
                ("min_players", models.PositiveIntegerField()),
                ("max_players", models.PositiveIntegerField()),
                ("time_constraint", models.PositiveIntegerField(default=300)),
                ("lobby_created", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_played", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="MatchProposal",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("proposed_time", models.DateTimeField()),
                ("min_players", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Mechanic",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(null=True)),
                ("image", models.TextField(default="/static/images/no_picture_available.png")),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content", models.TextField(null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("token_id", models.PositiveIntegerField(default=None)),
                ("update_on", models.PositiveIntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("person_role", models.PositiveSmallIntegerField(choices=[(1, "Designer"), (2, "Artist")])),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("team", models.TextField(blank=True, null=True)),
                ("role", models.TextField(blank=True, null=True)),
                (
                    "outcome",
                    models.PositiveSmallIntegerField(
                        blank=True, choices=[(0, "win"), (1, "draw"), (2, "lose"), (3, "withdrawal")], null=True
                    ),
                ),
                ("victory_type", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("website", models.URLField(null=True)),
                ("year_established", models.PositiveIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.TextField(blank=True, null=True)),
                ("review", models.TextField(blank=True, null=True)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("registration_start_date", models.DateTimeField()),
                ("registration_end_date", models.DateTimeField()),
                ("tournament_start_date", models.DateTimeField()),
                ("tournament_end_date", models.DateTimeField()),
                ("max_players", models.PositiveIntegerField()),
                ("description", models.TextField()),
                ("rules", models.TextField()),
                ("draw_rules", models.TextField()),
                ("num_winner", models.PositiveIntegerField(default=1)),
                ("archived", models.BooleanField(default=False)),
            ],
        ),
    ]
