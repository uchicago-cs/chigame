# Generated by Django 4.2.4 on 2023-11-07 23:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("games", "0001_initial"),
        ("users", "0001_initial"),
        ("games", "0001_games_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="player",
            name="user",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="matchproposal",
            name="game",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game"),
        ),
        migrations.AddField(
            model_name="matchproposal",
            name="group",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="users.group"),
        ),
        migrations.AddField(
            model_name="matchproposal",
            name="joined",
            field=models.ManyToManyField(blank=True, related_name="joined_matches", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="matchproposal",
            name="proposer",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="match",
            name="game",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game"),
        ),
        migrations.AddField(
            model_name="match",
            name="lobby",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="games.lobby"),
        ),
        migrations.AddField(
            model_name="match",
            name="players",
            field=models.ManyToManyField(through="games.Player", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="match",
            name="winners",
            field=models.ManyToManyField(blank=True, related_name="won_matches", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="lobby",
            name="created_by",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="lobby",
            name="game",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game"),
        ),
        migrations.AddField(
            model_name="lobby",
            name="members",
            field=models.ManyToManyField(related_name="lobbies", to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("match", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.match")),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("max_players", models.PositiveIntegerField()),
                ("description", models.TextField()),
                ("rules", models.TextField()),
                ("draw_rules", models.TextField()),
                ("game", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game")),
                ("matches", models.ManyToManyField(related_name="matches", to="games.match")),
                ("players", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                (
                    "winners",
                    models.ManyToManyField(blank=True, related_name="won_tournaments", to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("receipients", models.ManyToManyField(related_name="notifications", to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("chat", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.chat")),
                (
                    "sender",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],

    initial = True
    ]
